{"version":3,"sources":["components/About/kannan.jpg","components/About/images/shareyourbyte.jpg","components/About/images/wikipediasearch.jpg","components/Drawer/Drawer.js","components/Home.js","components/About/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","list","width","fullList","SwipeableTemDrawer","anchor","classes","React","useState","right","state","setState","toggleDrawer","open","event","type","key","Fragment","Button","onClick","className","style","color","fontSize","margin","SwipeableDrawer","onClose","onOpen","clsx","role","onKeyDown","List","textAlign","map","text","index","href","textDecoration","ListItem","button","ListItemText","primary","Divider","Home","id","rel","target","marginLeft","About","src","kannan","alt","ShareYourByte","WikipediaSearch","marginRight","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ed1c0cf5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kannan.ce9b200d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shareyourbyte.5be6f821.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wikipediasearch.0ff958ed.jpg\";","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function SwipeableTemDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n          <>\n          <h3 style = {{textAlign: \"center\", margin: \"1em 0\"}}>Welcome!</h3>\n        {['About Me', 'My Skills', 'My Projects', 'Contact Me'].map((text, index) => (\n          <a href= {`#${text}`}  style = {{textDecoration: \"none\", color:\"black\", margin:\"0.3em 0\"}} ><ListItem button key={text}>\n        {/* <ListItemIcon>{index % 2 === 0 ? \"inboxicon\" : \"mailicon\"}</ListItemIcon> */}\n            <ListItemText primary={text} />\n          </ListItem>\n          < Divider />\n          </a>\n          \n        ))}\n      \n        </>\n      </List>\n      {/* <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? \"inbox\" : \"mail\"}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List> */}\n    </div>\n  );\n\n  return (\n    <div>\n  \n        <React.Fragment>\n          <Button onClick={toggleDrawer('right', true)}><ReorderIcon className = \"reoder\" style = {{color:\"white\", fontSize: \"2.5rem\", margin: \"0 0.5em\"}}/></Button>\n          <SwipeableDrawer\n            anchor='right'\n            open={state['right'\n            ]}\n            onClose={toggleDrawer('right', false)}\n            onOpen={toggleDrawer('right', true)}\n          >\n            {list('right')}\n          </SwipeableDrawer>\n        </React.Fragment>\n      \n    </div>\n  );\n}\n","import React from \"react\"\nimport \"./Home.css\";\nimport SwipeableTemDrawer from \"./Drawer/Drawer\"\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport TwitterIcon from '@material-ui/icons/Twitter';\n\nfunction Home(){\n    const name = \"<K />\"\n    return (\n        <div id = \"flag\">\n            <div className = \"header\">\n                <div className = \"logo\">\n                 {name}\n                 </div>\n                 <div className=\"drawer\">\n                    <SwipeableTemDrawer key = {1}/>\n                 </div>\n                </div>\n            <div className = \"my-detail\">\n              <h2>Hi there!,</h2>\n              <h2>I am Kannan,</h2>\n              <h2>Web Developer</h2>\n            </div>\n            <section className = \"logo-section\">\n            <div className= \"icon-item\">\n          <a style = {{color: \"black\"}} href=\"https://github.com/KannanPalani57\" rel=\"noopener noreferrer\" target =\"_blank\">  \n          <GitHubIcon style ={{fontSize: \"2.1rem\"}}/>\n          </a>\n          </div>\n\n            <div className= \"icon-item\">  \n            <a style = {{color: \"black\"}} href=\"https://twitter.com/kannan_codes\" rel=\"noopener noreferrer\" target =\"_blank\">\n            <TwitterIcon style ={{fontSize: \"2.1rem\", marginLeft: \"0.5em\"}}/>\n            </a >\n            </div>\n          \n        </section>\n\n        </div> \n    )\n}\n\nexport default Home;","import React from \"react\"\nimport kannan from \"./kannan.jpg\"\nimport \"./About.css\"\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport ShareYourByte from \"./images/shareyourbyte.jpg\"\nimport WikipediaSearch from \"./images/wikipediasearch.jpg\"\nimport TwitterIcon from '@material-ui/icons/Twitter';\n\nfunction About(){\n    return (\n    <div>\n        <div className=\"About\" id =\"About Me\">\n        <div className=\"section-title\">\n        <h2>About Me</h2>\n        </div>\n       \n       <div className=\"detail-section\">   \n            <img src ={kannan} alt = \"kannan-img\" />\n           \n            <div className=\"detail\">\n                <div className = \"detail-link\">\n                <p>\n                I'm a 21-year-old BCA graduate currently studying web development and design.  \nI love to write clean and readable code.  Apart from code, I love to read novels and play sports.\n                </p>\n            </div></div>\n    </div>\n        <div className = \"skills\" id = \"My Skills\">\n            <h2>My Skills</h2>\n            <p>Through my studies, I've gained a solid understanding of computer\n                science and web development concepts, and I have dedicated to lot of \n                my free time to apply these concepts to real world applications.\n            </p>\n            <br/>\n            <div className = \"skill-items\">\n                <h5>C++</h5>\n            <h5>HTML</h5>\n            <h5>CSS</h5>\n            <h5>JavaScript</h5>                <h5>ReactJS</h5>\n            <h5>Django</h5>\n            <h5>PHP & SQL</h5>\n            <h5>Git</h5>\n            <h5>Figma</h5>\n            </div>\n        </div>\n    </div>\n       \n        {/* project section */}\n        <div className=\"projects\" id = \"My Projects\">\n            <div className=\"contact-title\">\n                <h2>Projects</h2>\n                <p>\n                    Take a look at some of the applications that I've dedicated my time build to.\n                </p>\n            </div>\n            <div className= \"project\">\n                \n                 <h4>ShareYourByte</h4>\n                 <div className=\"pro\">\n                 <img className =\"project-image\" alt = \"project1\" src = {ShareYourByte} />\n                \n                 <p>ShareYourByte is a Blogging application built with React and Django Restframework.  \n                    I'd used token based authentication for register users. In this app, Registered\n                    users can write blog post. A normal visitors can read the user's posts.\n                    This project enhanced my knowledge of integrating the apps with React and Django\n                 </p>\n                 </div>\n                 <a href =\"https://github.com/KannanPalani57/BlogApp-With-Django-React\" rel=\"noopener noreferrer\" target = \"_blank\">View Source</a>\n\n            </div>    \n\n            <div className= \"project\" >\n                \n                 <h4>Wikipedia Search</h4>\n                 <div className=\"pro\">\n                 <img className =\"project-image\" alt = \"project2\" src = {WikipediaSearch} />\n                 <p>Wikipedia Search is the project I put up with ReactJS.\n                     Before I used Class based components, in this application I picked up\n                     functional components to make use of hooks. This app retrieve the search \n                     results from Wikipedia about what we search and We can navigate to the Wikipedia \n                     content page. \n                 </p>\n               \n               </div>\n               <a href =\"https://github.com/KannanPalani57/Wikipedia-Viewer-In-ReactJS\" rel=\"noopener noreferrer\" target = \"_blank\">View Source</a>\n\n               <p className = \"see-repo\"style = {{fontSize: \"1.15rem\"}}>Let's see what I'd before and now</p>\n                    <a href=\"https://github.com/KannanPalani57?tab=repositories\" rel=\"noopener noreferrer\" target =\"_blank\">See all my works</a>\n            </div>\n            \n\n        </div>\n\n\n       <div className = \"contact\" id = \"Contact Me\">\n           <div className=\"contact-title\">\n               <h2>Let's Build Something Together</h2>\n               <p>Feel free to reach out if you're looking for a developer, have a question, or just want to connect.</p>\n           </div>\n           <h5 className=\"email\">kannanpalani455@gmail.com</h5>\n          <div className = \"social-connect\">\n          \n              <h5>Connect With Me By Click the Icon</h5>\n              <div className = \"icon\">\n              <a  style = {{color: \"black\"}} href=\"https://github.com/KannanPalani57\" rel=\"noopener noreferrer\" target =\"_blank\"><GitHubIcon style = {{fontSize:\"1.7em\", marginRight: \"1em\"}} /></a> \n            <a style = {{color: \"black\"}} href=\"https://twitter.com/kannan_codes\" rel=\"noopener noreferrer\" target =\"_blank\"><TwitterIcon style = {{fontSize:\"1.7em\"}}/></a>\n           </div>     \n          </div>\n       </div>\n       <footer>\n           <h3>Designed & Developed By @kannan</h3>\n       </footer>\n    </div>\n)\n}\n\nexport default About;","import React from 'react';\nimport Home from \"./components/Home\"\nimport About from \"./components/About/About\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n      <About />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}